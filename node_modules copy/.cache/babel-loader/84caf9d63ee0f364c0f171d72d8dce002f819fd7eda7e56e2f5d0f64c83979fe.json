{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Teleport as _Teleport, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Manage Goals\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  type: \"text\",\n  ref: \"goal\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Input is Invalid!\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Please enter at least a few characters...\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_error_alert = _resolveComponent(\"error-alert\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"input\", _hoisted_2, null, 512 /* NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.setGoal && $options.setGoal(...args))\n  }, \"Set Goal\"), (_openBlock(), _createBlock(_Teleport, {\n    to: \"body\"\n  }, [$data.inputInvalid ? (_openBlock(), _createBlock(_component_error_alert, {\n    key: 0\n  }, {\n    default: _withCtx(() => [_hoisted_3, _hoisted_4, _createElementVNode(\"button\", {\n      onClick: _cache[1] || (_cache[1] = (...args) => $options.confirmError && $options.confirmError(...args))\n    }, \"Okay\")]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)]))]);\n}","map":{"version":3,"mappings":";gCAEQA,oBAAqB,YAAjB,cAAY;;EACTC,IAAI,EAAC,MAAM;EAACC,GAAG,EAAC;;gCAIfF,oBAA0B,YAAtB,mBAAiB;gCACrBA,oBAAgD,WAA7C,2CAAyC;;;;uBAPxDG,oBAWM,cAVFC,UAAqB,EACrBJ,oBAAgC,SAAhCK,UAAgC,+BAChCL,oBAA0C;IAAjCM,OAAK,yCAAEC,6CAAO;KAAE,UAAQ,kBACjCC,aAMWC;IANDC,EAAE,EAAC;EAAM,IACIC,kBAAY,kBAA/BH,aAIcI;IAAAC;EAAA;sBAHV,MAA0B,CAA1BC,UAA0B,EAC1BC,UAAgD,EAChDf,oBAA2C;MAAlCM,OAAK,yCAAEC,uDAAY;OAAE,MAAI","names":["_createElementVNode","type","ref","_createElementBlock","_hoisted_1","_hoisted_2","onClick","$options","_createBlock","_Teleport","to","$data","_component_error_alert","key","_hoisted_3","_hoisted_4"],"sourceRoot":"","sources":["C:\\Users\\Alexis Jaimes\\Desktop\\vueProjects\\cmp-communication-08-potential-problem-starting-setup\\src\\components\\ManageGoals.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h2>Manage Goals</h2>\r\n        <input type=\"text\" ref=\"goal\" />\r\n        <button @click=\"setGoal\">Set Goal</button>\r\n        <teleport to=\"body\">\r\n            <error-alert v-if=\"inputInvalid\">\r\n                <h2>Input is Invalid!</h2>\r\n                <p>Please enter at least a few characters...</p>\r\n                <button @click=\"confirmError\">Okay</button>\r\n            </error-alert>\r\n        </teleport>   \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ErrorAlert from './ErrorAlert.vue';\r\n\r\nexport default {\r\n    components: {\r\n        ErrorAlert\r\n    },\r\n    data(){\r\n        return { \r\n            inputInvalid: false,\r\n        };\r\n    },\r\n    methods: {\r\n        setGoal(){\r\n            const enteredValue = this.$refs.goal.value;\r\n            if(enteredValue === ''){\r\n                this.inputInvalid = true;\r\n            }\r\n        },\r\n        confirmError(){\r\n                        this.inputInvalid = false;\r\n                    }\r\n    }\r\n        \r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}