{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Phone:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Phone:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"li\", null, [_createElementVNode(\"h2\", null, _toDisplayString($props.name) + \" \" + _toDisplayString($props.isFavorite == true ? '(Favorite)' : ''), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleFavorite && $options.toggleFavorite(...args))\n  }, \"Toggle Favorite\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleDetails && $options.toggleDetails(...args))\n  }, \"Show Details\"), $data.detailsAreVisible ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_1, [_createElementVNode(\"li\", null, [_hoisted_2, _createTextVNode(\" \" + _toDisplayString($props.phoneNumber), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_hoisted_3, _createTextVNode(\" \" + _toDisplayString($props.emailAddress), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.$emit('delete'))\n  }, \"Delete\")]);\n}","map":{"version":3,"mappings":";;;;gCAMgBA,oBAAuB,gBAAf,QAAM;gCACdA,oBAAuB,gBAAf,QAAM;;;uBAN1BC,oBASK,aARDD,oBAA+D,6BAAxDE,WAAI,IAAG,GAAC,oBAAGA,iBAAU,8CAC5BF,oBAAwD;IAA/CG,OAAK,yCAAEC,2DAAc;KAAE,iBAAe,GAC/CJ,oBAAoD;IAA3CG,OAAK,yCAAEC,yDAAa;KAAE,cAAY,GAChCC,uBAAiB,kBAA5BJ,oBAGK,mBAFDD,oBAAkD,aAA9CM,UAAuB,sBAAC,oBAAGJ,kBAAW,oBAC1CF,oBAAmD,aAA/CO,UAAuB,sBAAC,oBAAGL,mBAAY,2DAE/CF,oBAAgD;IAAvCG,OAAK,sCAAEK,UAAK;KAAY,QAAM","names":["_createElementVNode","_createElementBlock","$props","onClick","$options","$data","_hoisted_2","_hoisted_3","_ctx"],"sourceRoot":"","sources":["C:\\Users\\Alexis Jaimes\\Desktop\\vue-first-app\\src\\components\\FriendContact.vue"],"sourcesContent":["<template>\r\n    <li>\r\n        <h2>{{ name }} {{ isFavorite == true ? '(Favorite)' : ''}}</h2>\r\n        <button @click=\"toggleFavorite\">Toggle Favorite</button>\r\n        <button @click=\"toggleDetails\">Show Details</button>\r\n        <ul  v-if=\"detailsAreVisible\">\r\n            <li><strong>Phone:</strong> {{ phoneNumber }}</li>\r\n            <li><strong>Phone:</strong> {{ emailAddress }}</li>\r\n        </ul>\r\n        <button @click=\"$emit('delete')\">Delete</button>\r\n    </li>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    //props: ['name','phoneNumber','emailAddress','isFavorite'],\r\n    props: {\r\n        id: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        phoneNumber: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        emailAddress: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        isFavorite: {\r\n            type: Boolean,\r\n            required: false,\r\n            default: false,\r\n            validator: function(value){\r\n                return value == '1' || value == '0';\r\n            }\r\n        },\r\n    },\r\n    emits: ['toogle-favorite'],\r\n    // emits: {\r\n    //     'toggle-favorite': function(id){\r\n    //         if(id){\r\n    //             return true;\r\n    //         } else{\r\n    //             console.warn('Id is missing!');\r\n    //             return false;   \r\n    //         }\r\n    //     }   \r\n    // },\r\n    data(){\r\n        return{\r\n            detailsAreVisible: false,\r\n        };\r\n    },\r\n    methods: {\r\n        toggleDetails(){\r\n            this.detailsAreVisible = !this.detailsAreVisible;\r\n        },\r\n        toggleFavorite(){\r\n            this.$emit('toggle-favorite', this.id);\r\n        }\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}